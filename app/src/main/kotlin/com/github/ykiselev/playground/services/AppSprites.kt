package com.github.ykiselev.playground.services

import com.github.ykiselev.assets.Assets
import com.github.ykiselev.common.closeables.Closeables
import com.github.ykiselev.opengl.OglRecipes
import com.github.ykiselev.opengl.sprites.ColorTable
import com.github.ykiselev.opengl.sprites.DefaultSpriteBatch
import com.github.ykiselev.opengl.sprites.SimpleColorTable
import com.github.ykiselev.opengl.sprites.SpriteBatch

/**
 * @author Yuriy Kiselev (uze@yandex.ru).
 */
object AppSprites {
    /**
     * Xterm color table
     */
    private val colorTable: ColorTable = SimpleColorTable(
        intArrayOf(
            0x000000ff, -0x7fffff01, 0x008000ff, -0x7f7fff01, 0x000080ff, -0x7fff7f01, 0x008080ff, -0x3f3f3f01,
            -0x7f7f7f01, -0xffff01, 0x00ff00ff, -0xff01, 0x0000ffff, -0xff0001, 0x00ffffff, -0x1,
            0x000000ff, 0x00005fff, 0x000087ff, 0x0000afff, 0x0000d7ff, 0x0000ffff,
            0x005f00ff, 0x005f5fff, 0x005f87ff, 0x005fafff, 0x005fd7ff, 0x005fffff,
            0x008700ff, 0x00875fff, 0x008787ff, 0x0087afff, 0x0087d7ff, 0x0087ffff,
            0x00af00ff, 0x00af5fff, 0x00af87ff, 0x00afafff, 0x00afd7ff, 0x00afffff,
            0x00d700ff, 0x00d75fff, 0x00d787ff, 0x00d7afff, 0x00d7d7ff, 0x00d7ffff,
            0x00ff00ff, 0x00ff5fff, 0x00ff87ff, 0x00ffafff, 0x00ffd7ff, 0x00ffffff,
            0x5f0000ff, 0x5f005fff, 0x5f0087ff, 0x5f00afff, 0x5f00d7ff, 0x5f00ffff,
            0x5f5f00ff, 0x5f5f5fff, 0x5f5f87ff, 0x5f5fafff, 0x5f5fd7ff, 0x5f5fffff,
            0x5f8700ff, 0x5f875fff, 0x5f8787ff, 0x5f87afff, 0x5f87d7ff, 0x5f87ffff,
            0x5faf00ff, 0x5faf5fff, 0x5faf87ff, 0x5fafafff, 0x5fafd7ff, 0x5fafffff,
            0x5fd700ff, 0x5fd75fff, 0x5fd787ff, 0x5fd7afff, 0x5fd7d7ff, 0x5fd7ffff,
            0x5fff00ff, 0x5fff5fff, 0x5fff87ff, 0x5fffafff, 0x5fffd7ff, 0x5fffffff,
            -0x78ffff01, -0x78ffa001, -0x78ff7801, -0x78ff5001, -0x78ff2801, -0x78ff0001,
            -0x78a0ff01, -0x78a0a001, -0x78a07801, -0x78a05001, -0x78a02801, -0x78a00001,
            -0x7878ff01, -0x7878a001, -0x78787801, -0x78785001, -0x78782801, -0x78780001,
            -0x7850ff01, -0x7850a001, -0x78507801, -0x78505001, -0x78502801, -0x78500001,
            -0x7828ff01, -0x7828a001, -0x78287801, -0x78285001, -0x78282801, -0x78280001,
            -0x7800ff01, -0x7800a001, -0x78007801, -0x78005001, -0x78002801, -0x78000001,
            -0x50ffff01, -0x50ffa001, -0x50ff7801, -0x50ff5001, -0x50ff2801, -0x50ff0001,
            -0x50a0ff01, -0x50a0a001, -0x50a07801, -0x50a05001, -0x50a02801, -0x50a00001,
            -0x5078ff01, -0x5078a001, -0x50787801, -0x50785001, -0x50782801, -0x50780001,
            -0x5050ff01, -0x5050a001, -0x50507801, -0x50505001, -0x50502801, -0x50500001,
            -0x5028ff01, -0x5028a001, -0x50287801, -0x50285001, -0x50282801, -0x50280001,
            -0x5000ff01, -0x5000a001, -0x50007801, -0x50005001, -0x50002801, -0x50000001,
            -0x28ffff01, -0x28ffa001, -0x28ff7801, -0x28ff5001, -0x28ff2801, -0x28ff0001,
            -0x28a0ff01, -0x28a0a001, -0x28a07801, -0x28a05001, -0x28a02801, -0x28a00001,
            -0x2878ff01, -0x2878a001, -0x28787801, -0x28785001, -0x28782801, -0x28780001,
            -0x2850ff01, -0x2850a001, -0x28507801, -0x28505001, -0x28502801, -0x28500001,
            -0x2828ff01, -0x2828a001, -0x28287801, -0x28285001, -0x28282801, -0x28280001,
            -0x2800ff01, -0x2800a001, -0x28007801, -0x28005001, -0x28002801, -0x28000001,
            -0xffff01, -0xffa001, -0xff7801, -0xff5001, -0xff2801, -0xff0001,
            -0xa0ff01, -0xa0a001, -0xa07801, -0xa05001, -0xa02801, -0xa00001,
            -0x78ff01, -0x78a001, -0x787801, -0x785001, -0x782801, -0x780001,
            -0x50ff01, -0x50a001, -0x507801, -0x505001, -0x502801, -0x500001,
            -0x28ff01, -0x28a001, -0x287801, -0x285001, -0x282801, -0x280001,
            -0xff01, -0xa001, -0x7801, -0x5001, -0x2801, -0x1,
            0x080808ff, 0x121212ff, 0x1c1c1cff, 0x262626ff, 0x303030ff, 0x3a3a3aff,
            0x444444ff, 0x4e4e4eff, 0x585858ff, 0x606060ff, 0x666666ff, 0x767676ff,
            -0x7f7f7f01, -0x75757501, -0x6b6b6b01, -0x61616101, -0x57575701, -0x4d4d4d01,
            -0x43434301, -0x39393901, -0x2f2f2f01, -0x25252501, -0x1b1b1b01, -0x11111101
        )
    )

    fun createBatch(assets: Assets): SpriteBatch =
        Closeables.newGuard().use { guard ->
            val prg = guard.hold(assets.load("progs/sprite-batch.conf", OglRecipes.PROGRAM))
            val white = guard.hold(assets.load("images/white.png", OglRecipes.SPRITE))
            val batch = DefaultSpriteBatch(
                prg,
                white,
                colorTable
            )
            guard.detach()
            batch
        }
}